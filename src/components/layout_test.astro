---
import DemoSlice from "./demo_slice.astro";


//=======================================
// Code highlighting
import * as fs from 'fs';
import { createHighlighter } from 'shiki'
import type StarlightIntegration from "@astrojs/starlight"

const highlighter = await createHighlighter({
    themes: ['slack-dark', 'min-light', 'andromeeda', 'github-light-default', 'material-theme-lighter'],
    langs: ['c']
})
// load the language
await highlighter.loadLanguage(
    JSON.parse(fs.readFileSync("./c3-grammar.json", "utf-8"))
) 


//=======================================
// Code to highlight
const code_input = [
{
    "name": "Optionals",
    "desktop_code": 
`import std::io;

fn void! test()
{
    // Return an Excuse by adding '?' after the fault.
    return IoError.FILE_NOT_FOUND?;
}

fn void main(String[] args)
{
    // If the Optional is empty, assign the
    // Excuse to a variable:
    if (catch excuse = test())
    {
        io::printfn("test() gave an Excuse: %s", excuse);
    }
}`,
    "mobile_code": 
`import std::io;

fn void! test()
{
    // Return an Excuse by with
    // '?' after the fault.
    return IoError.READ_ONLY?;
}

fn void main(String[] args)
{
    // If the Optional is empty
    // assign the Excuse
    // to a variable:
    if (catch excuse = test())
    {
        io::printfn(
            "Excuse: %s", excuse
        );
    }
}`    
},
{
    "name": "Defer",
    "desktop_code": 
`import std::io;

fn void! main()
{
    int* x = mem::new(int);
    // Free memory on scope exit
    defer free(x); 

    io::printfn("x: %s", *x);
}
`,
    "mobile_code": 
`import std::io;

fn void! main()
{
    int* x = mem::new(int);
    // Free memory on scope exit
    defer free(x); 

    io::printfn("x: %s", *x);
}`    
},
{
    "name": "Slices",
    "desktop_code": 
`fn void main()
{
    int[5] a = 1, 20, 50 ;
    // selects [ 20, 50 ]
    int[] c = a[1 .. 2]; 
}`,
    "mobile_code":
`fn void main()
{
    int[5] a = 1, 20, 50 ;
    // selects [ 20, 50 ]
    int[] c = a[1 .. 2]; 
}`
},
{
    "name": "Contracts",
    "desktop_code": 
`<*
 @require x != 0 "infinite result" 
*>
fn float divide(int x)
{
    return 1.0f / x;
}`,
    "mobile_code":
`<*
 @require x != 0 "infinite result" 
*>
fn float divide(int x)
{
    return 1.0f / x;
}`
}
]

const code_input_test = [
{
    "name": "Optionals_",
    "desktop_code": 
`import std::io;

fn void! test()
{
    // Return an Excuse by adding '?' after the fault.
    return IoError.FILE_NOT_FOUND?;
}

fn void main(String[] args)
{
    // If the Optional is empty, assign the
    // Excuse to a variable:
    if (catch excuse = test())
    {
        io::printfn("test() gave an Excuse: %s", excuse);
    }
}`,
    "mobile_code": 
`import std::io;

fn void! test()
{
    // Return an Excuse by with
    // '?' after the fault.
    return IoError.READ_ONLY?;
}

fn void main(String[] args)
{
    // If the Optional is empty
    // assign the Excuse
    // to a variable:
    if (catch excuse = test())
    {
        io::printfn(
            "Excuse: %s", excuse
        );
    }
}`    
},
{
    "name": "Defer_",
    "desktop_code": 
`import std::io;

fn void! main()
{
    int* x = mem::new(int);
    // Free memory on scope exit
    defer free(x); 

    io::printfn("x: %s", *x);
}
`,
    "mobile_code": 
`import std::io;

fn void! main()
{
    int* x = mem::new(int);
    // Free memory on scope exit
    defer free(x); 

    io::printfn("x: %s", *x);
}`    
},
{
    "name": "Slices_",
    "desktop_code": 
`fn void main()
{
    int[5] a = 1, 20, 50 ;
    // selects [ 20, 50 ]
    int[] c = a[1 .. 2]; 
}`,
    "mobile_code":
`fn void main()
{
    int[5] a = 1, 20, 50 ;
    // selects [ 20, 50 ]
    int[] c = a[1 .. 2]; 
}`
},
{
    "name": "Contracts_",
    "desktop_code": 
`<*
 @require x != 0 "infinite result" 
*>
fn float divide(int x)
{
    return 1.0f / x;
}`,
    "mobile_code":
`<*
 @require x != 0 "infinite result" 
*>
fn float divide(int x)
{
    return 1.0f / x;
}`
}
]

// Clear up the formatter resources after 2s
await setTimeout(highlighter.dispose, 2000)

---


<script lang="js">
    // record browser preference
    let browserPreferDark = false;
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        browserPreferDark = true;
    }

    // automatically set theme based on browser's theme preference
    if (localStorage["starlight-theme"] === undefined) {
        if (browserPreferDark) {
            localStorage["starlight-theme"] = "dark";
            document.documentElement.classList.add("dark");
        } else {
            localStorage["starlight-theme"] = "light";
            document.documentElement.classList.remove("dark");
        }
    }

    // read previously set value, apply the theme
    if (localStorage["starlight-theme"] === "dark") {
        document.documentElement.classList.add("dark");
    }

    // Change local storage value setting the theme
    function lightModeClickhandler() {
        // if was dark before set to light
        if (localStorage["starlight-theme"] === "dark") {
            localStorage["starlight-theme"] = "light";
        }
        // if was light before set to dark
        else if (localStorage["starlight-theme"] === "light") {
            localStorage["starlight-theme"] = "dark";
        }

        // use the local storage value to change the classes applied throughout
        if (localStorage["starlight-theme"] === "dark") {
            document.documentElement.classList.add("dark");
        } else if (localStorage["starlight-theme"] === "light") {
            document.documentElement.classList.remove("dark");
        }

        return;
    }

</script>


<header
    class="
    md:sticky
    md:top-0
    md:z-50

    grid
    grid-cols-3
    grid-rows-4
    md:grid-cols-[0.8fr_0.5fr_0.5fr_1.1fr_1.1fr_1.1fr_0.6fr_0.3fr_0.3fr_0.3fr_0.3fr]
    md:grid-rows-1
    justify-items-center
    content-center
    items-center
    select-none
    font-medium
    text-indigo-950
    bg-white
    dark:bg-[hsl(224,12%,4%)]
    md:h-14
    border-b-2
    border-b-gray-200
    dark:border-b-gray-800"
>
    <span
        class="text-3xl
        font-bold
        row-span-1
        md:row-start-1
        col-start-2
        md:col-start-1
        bg-gradient-to-l
        from-violet-600
        to-blue-600
        dark:from-violet-500
        dark:to-blue-500
        bg-clip-text 
        text-transparent
        w-full
        h-full
        flex
        items-center
        justify-center"
    >
        C3
    </span>


    <!-- ================================= -->
    <button
        class="row-span-1
        col-start-1
        md:row-start-1
        md:col-start-3
         
        hover:text-indigo-500
        transition-all
        delay-75
        w-full
        h-full
        dark:text-gray-200
        dark:hover:text-indigo-400"
    >
        <a href="/get-involved/" class=""> Docs </a>
    </button>
    <!-- ================================= -->
    <button
        class="row-span-1
        md:row-start-1 md:col-start-4
         
        hover:text-indigo-500
        transition-all
        delay-75
        w-full
        h-full
        dark:text-gray-200
        dark:hover:text-indigo-400"
    >
        <a href="/get-involved/" class=""> Examples </a>
    </button>
    <!-- ================================= -->
    <button
        class="row-span-1
        md:row-start-1 md:col-start-5
         
        hover:text-indigo-500
        transition-all
        delay-75
        w-full
        h-full
        dark:text-gray-200
        dark:hover:text-indigo-400"
    >
        <a href="/get-involved/" class=""> Download </a>
    </button>
    <!-- ================================= -->
    <button
        class="row-span-1
        md:row-start-1 md:col-start-6
         
        hover:text-indigo-500
        transition-all
        delay-75
        w-full
        h-full
        dark:text-gray-200
        dark:hover:text-indigo-400"
    >
        <a href="/get-involved/" class=""> Sponsor </a>
    </button>
    <!-- ================================= -->
    <button
        class="row-span-1
        md:row-start-1 md:col-start-7
         
        hover:text-indigo-500
        transition-all
        delay-75
        w-full
        h-full
        dark:text-gray-200
        dark:hover:text-indigo-400"
    >
        <a href="/get-involved/" class=""> News </a>
    </button>
    <!-- ================================= -->

    <div
        class="
        group
        flex
        dark:hidden
        group
        items-center
        content-center
        justify-center
        font-medium
        md:col-start-8
        md:row-start-1
        h-full
        w-full
        cursor-pointer
         
        transition-all
        delay-75
        
        dark:text-gray-200
        dark:hover:text-indigo-400"
        role="button"
        onmousedown="lightModeClickhandler()"
    >
        
        <p class="
            text-sm
            bg-clip-text 
            text-transparent
            bg-black
            group-hover:bg-indigo-400
            ">
            ðŸŒ™
        </p>
        

    </div>
    <div
        class="
        group
        hidden
        dark:flex
        group
        items-center
        justify-center
        
        font-medium
        md:col-start-8
        md:row-start-1
        w-full
        h-full
        cursor-pointer"
        role="button"
        onmousedown="lightModeClickhandler()"
    >
        <p class="
            text-sm
            bg-clip-text 
            text-transparent
            bg-white
            group-hover:bg-indigo-400
            ">
            â˜€
        </p>

    </div>

    <!-- ================================= -->

    <!-- Github Icon -->
    <button
        class="flex
        items-center
        justify-center
        justify-items-center
        md:row-start-1
        md:col-start-9
         
        hover:fill-indigo-400
        dark:hover:fill-indigo-400
        dark:fill-white
        transition-all delay-75
        w-full
        h-full"
    >
        <svg
            class="mx-2 h-4"
            viewBox="0 0 100 96.36"
            xmlns="http://www.w3.org/2000/svg"
        >
            <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z"
            ></path>
        </svg>
    </button>

    <!-- ================================= -->

    <!-- Discourse Icon -->
    <button
        class="flex
        items-center
        justify-center
        justify-items-center
        md:row-start-1
        md:col-start-10
         
        hover:fill-indigo-500
        dark:hover:fill-indigo-400
        dark:fill-white
        transition-all
        delay-75
        w-full
        h-full"
    >
        <svg
            class="mx-2 h-4"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            role="img"
        >
            <path
                d="M12.103 0C18.666 0 24 5.485 24 11.997c0 6.51-5.33 11.99-11.9 11.99L0 24V11.79C0 5.28 5.532 0 12.103 0zm.116 4.563a7.395 7.395 0 0 0-6.337 3.57 7.247 7.247 0 0 0-.148 7.22L4.4 19.61l4.794-1.074a7.424 7.424 0 0 0 8.136-1.39 7.256 7.256 0 0 0 1.737-7.997 7.375 7.375 0 0 0-6.84-4.585h-.008z"
            ></path>
        </svg>
    </button>

    <!-- ================================= -->

    <!-- Discord -->
    <button
        class="flex
        items-center
        justify-center
        justify-items-center
        md:row-start-1
        md:col-start-11
         
        hover:fill-indigo-500
        dark:hover:fill-indigo-400
        dark:fill-white
        transition-all
        delay-75
        w-full
        h-full"
    >
        <svg
            class="mx-2 h-4"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 127.14 96.36"
        >
            <path
                d="M107.7,8.07A105.15,105.15,0,0,0,81.47,0a72.06,72.06,0,0,0-3.36,6.83A97.68,97.68,0,0,0,49,6.83,72.37,72.37,0,0,0,45.64,0,105.89,105.89,0,0,0,19.39,8.09C2.79,32.65-1.71,56.6.54,80.21h0A105.73,105.73,0,0,0,32.71,96.36,77.7,77.7,0,0,0,39.6,85.25a68.42,68.42,0,0,1-10.85-5.18c.91-.66,1.8-1.34,2.66-2a75.57,75.57,0,0,0,64.32,0c.87.71,1.76,1.39,2.66,2a68.68,68.68,0,0,1-10.87,5.19,77,77,0,0,0,6.89,11.1A105.25,105.25,0,0,0,126.6,80.22h0C129.24,52.84,122.09,29.11,107.7,8.07ZM42.45,65.69C36.18,65.69,31,60,31,53s5-12.74,11.43-12.74S54,46,53.89,53,48.84,65.69,42.45,65.69Zm42.24,0C78.41,65.69,73.25,60,73.25,53s5-12.74,11.44-12.74S96.23,46,96.12,53,91.08,65.69,84.69,65.69Z"
            ></path>
        </svg>
    </button>

    <!-- ================================= -->
</header>

<!-- Hero banner -->
<div class="
    grid
    grid-cols-4
    grid-rows-2
    lg:grid-cols-[repeat(12,minmax(0,1fr))]
    w-full
    py-8
    lg:py-0
    lg:h-[24rem]
    bg-[hsl(288,15%,88%)]
    dark:bg-[hsl(288,10%,12%)]"
>
    <div class="
        col-start-8
        col-end-13
        row-span-2
        row-start-1
        bg-[url('/logo_big.png')]
        dark:brightness-90
        bg-no-repeat
        bg-center
        z-10"
    >
    </div>

    <div class="
        flex
        flex-col
        content-center
        justify-center
        row-start-1
        row-span-2
        col-start-1
        col-end-9
        p-8
        md:p-12"
    >
        <h1
            class="
            text-3xl
            md:text-4xl
            font-bold
            dark:text-gray-100"
        >
            The
            <span
                class="text-4xl
                font-bold
                row-span-1
                md:row-start-1
                bg-clip-text
                bg-gradient-to-l
                from-violet-600
                to-blue-600
                dark:from-violet-500
                dark:to-blue-500
                text-transparent"
            >
                C3
            </span>
            Language
        </h1>

        <p class="mt-4
        mb-4
        dark:text-gray-100">
            Making it <b>easier</b> to write <b>Safe</b>, <b>High Performance</b
            > and <b>C-Like</b> code.
        </p>
    </div>
</div>


            

<DemoSlice
    title="ergonomics_and_safety"
    heading="Ergonomics & Safety"
    bullets={
        [
            "Optionals to safely and quickly handle errors and null.",
            "Defer to clean up resources.",
            "Slices and foreach for safe iteration.",
            "Contracts in comments, to add constraints to your code."
        ]
    }
    buttons={
        [
            "Optionals",
            "Defer",
            "Slices",
            "Contracts",
        ]
    }
    code={code_input}
    highlighter={highlighter}
/>


<DemoSlice
    title="testing123_and_safety"
    heading="Ergonomics & Safety"
    bullets={
        [
            "Optionals to safely and quickly handle errors and null.",
            "Defer to clean up resources.",
            "Slices and foreach for safe iteration.",
            "Contracts in comments, to add constraints to your code."
        ]
    }
    buttons={
        [
            "Optionals_",
            "Defer_",
            "Slices_",
            "Contracts_",
        ]
    }
    code={code_input_test}
    highlighter={highlighter}
/>
